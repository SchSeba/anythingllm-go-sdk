/*
AnythingLLM Developer API

API endpoints that enable programmatic reading, writing, and updating of your AnythingLLM instance. UI supplied by Swagger.io.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the V1WorkspaceSlugThreadThreadSlugChatPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1WorkspaceSlugThreadThreadSlugChatPostRequest{}

// V1WorkspaceSlugThreadThreadSlugChatPostRequest struct for V1WorkspaceSlugThreadThreadSlugChatPostRequest
type V1WorkspaceSlugThreadThreadSlugChatPostRequest struct {
	// The message/prompt to send to the workspace thread
	Message string `json:"message"`
	// The type of conversation - query or chat
	Mode *string `json:"mode,omitempty"`
	// Optional user ID associated with the chat
	UserId NullableInt32 `json:"userId,omitempty"`
	// Optional array of file attachments
	Attachments []V1WorkspaceSlugThreadThreadSlugChatPostRequestAttachmentsInner `json:"attachments,omitempty"`
	// Whether to reset the conversation thread
	Reset *bool `json:"reset,omitempty"`
}

type _V1WorkspaceSlugThreadThreadSlugChatPostRequest V1WorkspaceSlugThreadThreadSlugChatPostRequest

// NewV1WorkspaceSlugThreadThreadSlugChatPostRequest instantiates a new V1WorkspaceSlugThreadThreadSlugChatPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1WorkspaceSlugThreadThreadSlugChatPostRequest(message string) *V1WorkspaceSlugThreadThreadSlugChatPostRequest {
	this := V1WorkspaceSlugThreadThreadSlugChatPostRequest{}
	this.Message = message
	var mode string = "query"
	this.Mode = &mode
	var reset bool = false
	this.Reset = &reset
	return &this
}

// NewV1WorkspaceSlugThreadThreadSlugChatPostRequestWithDefaults instantiates a new V1WorkspaceSlugThreadThreadSlugChatPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1WorkspaceSlugThreadThreadSlugChatPostRequestWithDefaults() *V1WorkspaceSlugThreadThreadSlugChatPostRequest {
	this := V1WorkspaceSlugThreadThreadSlugChatPostRequest{}
	var mode string = "query"
	this.Mode = &mode
	var reset bool = false
	this.Reset = &reset
	return &this
}

// GetMessage returns the Message field value
func (o *V1WorkspaceSlugThreadThreadSlugChatPostRequest) GetMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *V1WorkspaceSlugThreadThreadSlugChatPostRequest) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Message, true
}

// SetMessage sets field value
func (o *V1WorkspaceSlugThreadThreadSlugChatPostRequest) SetMessage(v string) {
	o.Message = v
}

// GetMode returns the Mode field value if set, zero value otherwise.
func (o *V1WorkspaceSlugThreadThreadSlugChatPostRequest) GetMode() string {
	if o == nil || IsNil(o.Mode) {
		var ret string
		return ret
	}
	return *o.Mode
}

// GetModeOk returns a tuple with the Mode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1WorkspaceSlugThreadThreadSlugChatPostRequest) GetModeOk() (*string, bool) {
	if o == nil || IsNil(o.Mode) {
		return nil, false
	}
	return o.Mode, true
}

// HasMode returns a boolean if a field has been set.
func (o *V1WorkspaceSlugThreadThreadSlugChatPostRequest) HasMode() bool {
	if o != nil && !IsNil(o.Mode) {
		return true
	}

	return false
}

// SetMode gets a reference to the given string and assigns it to the Mode field.
func (o *V1WorkspaceSlugThreadThreadSlugChatPostRequest) SetMode(v string) {
	o.Mode = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *V1WorkspaceSlugThreadThreadSlugChatPostRequest) GetUserId() int32 {
	if o == nil || IsNil(o.UserId.Get()) {
		var ret int32
		return ret
	}
	return *o.UserId.Get()
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *V1WorkspaceSlugThreadThreadSlugChatPostRequest) GetUserIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.UserId.Get(), o.UserId.IsSet()
}

// HasUserId returns a boolean if a field has been set.
func (o *V1WorkspaceSlugThreadThreadSlugChatPostRequest) HasUserId() bool {
	if o != nil && o.UserId.IsSet() {
		return true
	}

	return false
}

// SetUserId gets a reference to the given NullableInt32 and assigns it to the UserId field.
func (o *V1WorkspaceSlugThreadThreadSlugChatPostRequest) SetUserId(v int32) {
	o.UserId.Set(&v)
}
// SetUserIdNil sets the value for UserId to be an explicit nil
func (o *V1WorkspaceSlugThreadThreadSlugChatPostRequest) SetUserIdNil() {
	o.UserId.Set(nil)
}

// UnsetUserId ensures that no value is present for UserId, not even an explicit nil
func (o *V1WorkspaceSlugThreadThreadSlugChatPostRequest) UnsetUserId() {
	o.UserId.Unset()
}

// GetAttachments returns the Attachments field value if set, zero value otherwise.
func (o *V1WorkspaceSlugThreadThreadSlugChatPostRequest) GetAttachments() []V1WorkspaceSlugThreadThreadSlugChatPostRequestAttachmentsInner {
	if o == nil || IsNil(o.Attachments) {
		var ret []V1WorkspaceSlugThreadThreadSlugChatPostRequestAttachmentsInner
		return ret
	}
	return o.Attachments
}

// GetAttachmentsOk returns a tuple with the Attachments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1WorkspaceSlugThreadThreadSlugChatPostRequest) GetAttachmentsOk() ([]V1WorkspaceSlugThreadThreadSlugChatPostRequestAttachmentsInner, bool) {
	if o == nil || IsNil(o.Attachments) {
		return nil, false
	}
	return o.Attachments, true
}

// HasAttachments returns a boolean if a field has been set.
func (o *V1WorkspaceSlugThreadThreadSlugChatPostRequest) HasAttachments() bool {
	if o != nil && !IsNil(o.Attachments) {
		return true
	}

	return false
}

// SetAttachments gets a reference to the given []V1WorkspaceSlugThreadThreadSlugChatPostRequestAttachmentsInner and assigns it to the Attachments field.
func (o *V1WorkspaceSlugThreadThreadSlugChatPostRequest) SetAttachments(v []V1WorkspaceSlugThreadThreadSlugChatPostRequestAttachmentsInner) {
	o.Attachments = v
}

// GetReset returns the Reset field value if set, zero value otherwise.
func (o *V1WorkspaceSlugThreadThreadSlugChatPostRequest) GetReset() bool {
	if o == nil || IsNil(o.Reset) {
		var ret bool
		return ret
	}
	return *o.Reset
}

// GetResetOk returns a tuple with the Reset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1WorkspaceSlugThreadThreadSlugChatPostRequest) GetResetOk() (*bool, bool) {
	if o == nil || IsNil(o.Reset) {
		return nil, false
	}
	return o.Reset, true
}

// HasReset returns a boolean if a field has been set.
func (o *V1WorkspaceSlugThreadThreadSlugChatPostRequest) HasReset() bool {
	if o != nil && !IsNil(o.Reset) {
		return true
	}

	return false
}

// SetReset gets a reference to the given bool and assigns it to the Reset field.
func (o *V1WorkspaceSlugThreadThreadSlugChatPostRequest) SetReset(v bool) {
	o.Reset = &v
}

func (o V1WorkspaceSlugThreadThreadSlugChatPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1WorkspaceSlugThreadThreadSlugChatPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["message"] = o.Message
	if !IsNil(o.Mode) {
		toSerialize["mode"] = o.Mode
	}
	if o.UserId.IsSet() {
		toSerialize["userId"] = o.UserId.Get()
	}
	if !IsNil(o.Attachments) {
		toSerialize["attachments"] = o.Attachments
	}
	if !IsNil(o.Reset) {
		toSerialize["reset"] = o.Reset
	}
	return toSerialize, nil
}

func (o *V1WorkspaceSlugThreadThreadSlugChatPostRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"message",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varV1WorkspaceSlugThreadThreadSlugChatPostRequest := _V1WorkspaceSlugThreadThreadSlugChatPostRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varV1WorkspaceSlugThreadThreadSlugChatPostRequest)

	if err != nil {
		return err
	}

	*o = V1WorkspaceSlugThreadThreadSlugChatPostRequest(varV1WorkspaceSlugThreadThreadSlugChatPostRequest)

	return err
}

type NullableV1WorkspaceSlugThreadThreadSlugChatPostRequest struct {
	value *V1WorkspaceSlugThreadThreadSlugChatPostRequest
	isSet bool
}

func (v NullableV1WorkspaceSlugThreadThreadSlugChatPostRequest) Get() *V1WorkspaceSlugThreadThreadSlugChatPostRequest {
	return v.value
}

func (v *NullableV1WorkspaceSlugThreadThreadSlugChatPostRequest) Set(val *V1WorkspaceSlugThreadThreadSlugChatPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableV1WorkspaceSlugThreadThreadSlugChatPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableV1WorkspaceSlugThreadThreadSlugChatPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1WorkspaceSlugThreadThreadSlugChatPostRequest(val *V1WorkspaceSlugThreadThreadSlugChatPostRequest) *NullableV1WorkspaceSlugThreadThreadSlugChatPostRequest {
	return &NullableV1WorkspaceSlugThreadThreadSlugChatPostRequest{value: val, isSet: true}
}

func (v NullableV1WorkspaceSlugThreadThreadSlugChatPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1WorkspaceSlugThreadThreadSlugChatPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


